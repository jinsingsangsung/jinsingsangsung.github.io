---
import type { Publication } from "@/lib/interfaces";
import { filePath } from "@/lib/blog-helpers";
import PublicationRichText from "./PublicationRichText.astro";

interface Props {
  publication: Publication;
}

const { publication } = Astro.props;

// Process authors to highlight "Jinsung Lee"
const processAuthors = (authorsString: string) => {
  if (!authorsString) return "";
  
  const authors = authorsString.split(",").map(author => author.trim());
  return authors.map(author => {
    if (author === "Jinsung Lee") {
      return `<span class="font-bold underline">${author}</span>`;
    }
    return author;
  }).join(", ");
};

let imageUrl = null;
if (publication.FeaturedImage) {
  try {
    if (publication.FeaturedImage.OptimizedUrl) {
      imageUrl = filePath(new URL(publication.FeaturedImage.OptimizedUrl));
    } else if (publication.FeaturedImage.Url) {
      imageUrl = filePath(new URL(publication.FeaturedImage.Url));
    }
  } catch (error) {
    // Fallback to direct URL if filePath processing fails
    imageUrl = publication.FeaturedImage.OptimizedUrl || publication.FeaturedImage.Url;
  }
}
---

<div class="publication-card bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 transition-transform hover:scale-105 border border-gray-200 dark:border-gray-700">
  <div class="flex flex-col md:flex-row gap-4">
    {imageUrl && (
      <div class="md:w-1/3 flex-shrink-0">
        <img 
          src={imageUrl} 
          alt={`Featured image for ${publication.Title}`}
          class="w-full h-32 md:h-40 object-cover rounded-lg"
          loading="lazy"
          onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
        />
        <div class="w-full h-32 md:h-40 bg-gray-200 dark:bg-gray-700 rounded-lg flex items-center justify-center text-sm text-gray-500 dark:text-gray-400" style="display: none;">
          Image not available
        </div>
      </div>
    )}
    
    <div class={`flex-1 ${!imageUrl ? 'w-full' : 'md:w-2/3'}`}>
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2 leading-tight">
        {publication.Title}
      </h3>
      
      {publication.Authors && (
        <p class="text-sm text-gray-600 dark:text-gray-300 mb-3" set:html={processAuthors(publication.Authors)}></p>
      )}
      
      {publication.Venue && publication.Venue.length > 0 && (
        <p class="text-base text-gray-500 dark:text-gray-400 mb-3">
          <PublicationRichText richTexts={publication.Venue} className="italic" />
        </p>
      )}
      
      <div class="flex flex-wrap gap-2">
        {publication.ProjectPageUrl && (
          <a 
            href={publication.ProjectPageUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-blue-600 bg-blue-50 rounded-full hover:bg-blue-100 dark:text-blue-400 dark:bg-blue-900/20 dark:hover:bg-blue-900/30 transition-colors"
          >
            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
            </svg>
            Project
          </a>
        )}
        
        {publication.PDFUrl && (
          <a 
            href={publication.PDFUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-red-600 bg-red-50 rounded-full hover:bg-red-100 dark:text-red-400 dark:bg-red-900/20 dark:hover:bg-red-900/30 transition-colors"
          >
            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"/>
            </svg>
            PDF
          </a>
        )}
        
        {publication.CodeUrl && (
          <a 
            href={publication.CodeUrl} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-gray-100 rounded-full hover:bg-gray-200 dark:text-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
          >
            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/>
            </svg>
            Code
          </a>
        )}
      </div>
    </div>
  </div>
</div>

<style>
  .publication-card {
    transition: all 0.3s ease;
  }
</style>