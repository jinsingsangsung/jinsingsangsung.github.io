---
import * as interfaces from "@/lib/interfaces.ts";
import NotionBlocks from "@/components/NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	renderChildren?: boolean; // Make this optional
	setId?: boolean;
}

const { block, renderChildren = true, setId = true } = Astro.props;

const columns = block.ColumnList.Columns;

// Calculate flex values based on column width ratios from Notion API
const hasValidRatios = columns.some(col => col.ColumnRatio !== undefined && col.ColumnRatio !== null && col.ColumnRatio > 0);

const flexValues = hasValidRatios 
	? columns.map(col => col.ColumnRatio || 1)
	: columns.map(() => 1); // Equal width if no ratios available

---


<div class="mx-auto my-4 flex w-full max-w-full flex-wrap gap-x-2 min-[40px]:gap-x-4 min-[40px]:flex-nowrap">
	{
		block.ColumnList.Columns.map((column: interfaces.Column, index: number) => (
			<div 
				class="ncolumns min-w-0"
				style={`flex: ${flexValues[index]};`}
			>
				<NotionBlocks blocks={column.Children} renderChildren={renderChildren} setId={setId} />
			</div>
		))
	}
</div>
