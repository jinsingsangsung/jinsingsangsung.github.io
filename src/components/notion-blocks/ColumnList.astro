---
import * as interfaces from "@/lib/interfaces.ts";
import NotionBlocks from "@/components/NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	renderChildren?: boolean; // Make this optional
	setId?: boolean;
}

const { block, renderChildren = true, setId = true } = Astro.props;

// Calculate flex values based on column ratios
const columns = block.ColumnList.Columns;
const hasRatios = columns.some(col => col.ColumnRatio !== undefined);
const flexValues = hasRatios 
	? columns.map(col => col.ColumnRatio || 1 / columns.length)
	: columns.map(() => 1);
---

<div class="mx-auto my-4 block w-full max-w-full flex-wrap gap-x-4 sm:flex md:flex-nowrap">
	{
		block.ColumnList.Columns.map((column: interfaces.Column, index: number) => (
			<div 
				class="ncolumns w-full max-w-full min-w-0 basis-44 sm:w-44 md:w-auto"
				style={hasRatios ? `flex: ${flexValues[index]}` : 'flex: 1'}
			>
				<NotionBlocks blocks={column.Children} renderChildren={renderChildren} setId={setId} />
			</div>
		))
	}
</div>
