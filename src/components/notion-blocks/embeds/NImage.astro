---
import { ENABLE_LIGHTBOX } from "@/constants.ts";
import * as interfaces from "@/lib/interfaces.ts";
import { filePath, getFirstImage } from "@/lib/blog-helpers";
import Caption from "@/components/notion-blocks/Caption.astro";

export interface Props {
	block: interfaces.Block;
	setId?: boolean;
}

const { block, setId = true } = Astro.props;

let image = "";
if (block.NImage?.External) {
	image = block.NImage.External.Url;
} else if (block.NImage?.File) {
	image = filePath(new URL(block.NImage.File.OptimizedUrl));
}

const plainTextCaption = block.NImage?.Caption.map((richText) => richText.PlainText).join(" ");

// Debug Image block properties - check format properties for width and alignment
const imageDebugData = {
	blockId: block.Id?.slice(-8),
	blockType: block.Type,
	allBlockProperties: Object.keys(block),
	nImageProperties: block.NImage ? Object.keys(block.NImage) : [],
	hasExternal: !!block.NImage?.External,
	hasFile: !!block.NImage?.File,
	imageType: block.NImage?.Type,
	caption: plainTextCaption,
	// NEW FORMAT PROPERTIES
	blockAlignment: block.NImage?.BlockAlignment,
	blockWidth: block.NImage?.BlockWidth,
	// Show what we have vs what we might be missing
	currentNImageData: block.NImage ? JSON.stringify(block.NImage, null, 2) : 'No NImage data',
	// Raw API data
	rawApiKeys: block.NImage?.RawApiDebug?.keys || [],
	rawApiData: block.NImage?.RawApiDebug?.fullObject || null,
	formatData: block.NImage?.RawApiDebug?.formatData,
	// Note about format properties
	formatNote: "üéØ Testing extraction of blockObject.format?.block_alignment and blockObject.format?.block_width"
};
---

<!-- Image API Debug Display -->
<div style="background: #fff3e0; padding: 12px; margin: 12px 0; font-size: 11px; border: 2px solid #ff9800; border-radius: 4px; font-family: monospace;">
	<strong>üñºÔ∏è IMAGE BLOCK API DEBUG:</strong><br/>
	<div style="margin-top: 8px;">
		<strong>Block ID:</strong> {imageDebugData.blockId}<br/>
		<strong>Block Type:</strong> {imageDebugData.blockType}<br/>
		<strong>All Block Properties:</strong> [{imageDebugData.allBlockProperties.join(', ')}]<br/>
		<strong>NImage Properties:</strong> [{imageDebugData.nImageProperties.join(', ')}]<br/>
		<strong>Image Type:</strong> {imageDebugData.imageType}<br/>
		<strong>Has External:</strong> {imageDebugData.hasExternal}<br/>
		<strong>Has File:</strong> {imageDebugData.hasFile}<br/>
		<strong>Caption:</strong> {imageDebugData.caption || 'No caption'}<br/>
		<div style="margin-top: 8px; background: rgba(0,255,0,0.2); padding: 8px; border-radius: 4px;">
			<strong>üéØ NEW FORMAT PROPERTIES:</strong><br/>
			<strong>Block Alignment:</strong> {imageDebugData.blockAlignment ?? 'null'}<br/>
			<strong>Block Width:</strong> {imageDebugData.blockWidth ?? 'null'}<br/>
		</div>
		<div style="margin-top: 8px; background: rgba(255,255,255,0.7); padding: 8px; border-radius: 4px;">
			<strong>Current NImage Data (processed):</strong><br/>
			<pre style="white-space: pre-wrap; margin: 4px 0;">{imageDebugData.currentNImageData}</pre>
		</div>
		<div style="margin-top: 8px; background: rgba(0,255,0,0.1); padding: 8px; border-radius: 4px;">
			<strong>üî• Raw API Response:</strong><br/>
			<strong>Available Keys:</strong> [{imageDebugData.rawApiKeys.join(', ')}]<br/>
			<pre style="white-space: pre-wrap; margin: 4px 0; max-height: 300px; overflow-y: auto;">{imageDebugData.rawApiData ? JSON.stringify(imageDebugData.rawApiData, null, 2) : 'No raw data'}</pre>
		</div>
		<div style="margin-top: 8px; background: rgba(255,0,255,0.1); padding: 8px; border-radius: 4px;">
			<strong>üìê Format Data (blockObject.format):</strong><br/>
			<pre style="white-space: pre-wrap; margin: 4px 0; max-height: 200px; overflow-y: auto;">{imageDebugData.formatData ? JSON.stringify(imageDebugData.formatData, null, 2) : 'No format data'}</pre>
		</div>
		<div style="margin-top: 8px; background: rgba(0,0,255,0.1); padding: 8px; border-radius: 4px;">
			<strong>üí° Investigation:</strong><br/>
			{imageDebugData.formatNote}<br/>
			<strong>Action:</strong> Check the green "NEW FORMAT PROPERTIES" and purple "Format Data" boxes above to see if block_alignment and block_width values are extracted correctly!
		</div>
	</div>
</div>

{
	image && (
		<figure class="mx-auto mt-1 max-w-full" id={setId ? block.Id : undefined}>
			<div class="mx-auto min-w-0">
				{ENABLE_LIGHTBOX ? (
					<a
						data-type="image"
						href={image}
						class="mediaglightbox no-rss"
						data-description={plainTextCaption}
						aria-label={`Open image with alt ${plainTextCaption} in lightbox`}
					>
						<img
							class="imagemedia block max-w-full rounded-md"
							loading={getFirstImage() && setId ? "eager" : "lazy"}
							src={image}
							alt={plainTextCaption}
						/>
					</a>
				) : (
					<img
						class="imagemedia block max-w-full rounded-md"
						src={image}
						loading={getFirstImage() ? "eager" : "lazy"}
						alt={plainTextCaption}
					/>
				)}
			</div>
			<Caption richTexts={block.NImage.Caption} block={block} as="figcaption" />
		</figure>
	)
}
